@charset "UTF-8";
/*
Se implementa la arquitectura 7-1
Los archivos parciales siempre empiezan con guion bajo para importarlo no es necesario poner el guin bajo
no la extencion scss */
/*En el folder base condra los archivos base del proyecto, como animaciones, typografias, etc */
/*En el folder abstracts vamos a poner todo el codigo que no gener css como las variables, mixin etc */
/*En el folder components crearemos un archivo para cada uno de nuestros componentes, los componentes son bloques  de
   construccion reutilizables que conforman nuestro sitio web o aplicacion, deben ser reutilziables en cualquier lugar
   de la pagina, completamente independientes
*/
/*En el folder layout para las pieza del diseño global de todo el proyecto, footer, header, etc */
/*En el folder pages para estilos muy especificos de cada pagina, por ejemplo una pagina de inicio */
/*La arquitectura 7-1 tambien teiene una carpeta de themes para cuando se esta haciendo una pagina con varios temas */
/*La arquitectura 7-1 tambien teiene una carpeta de vendor para css de terceros */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

/* Esta no estara en typography porque es la base para calcular 1rem en todo el sitio, lo cual lo hace global,
 no para la tipografia del sitio*/
html {
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

/* Para animaciones, especificamos el nombre de la animacion */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0rem); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0rem); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0rem); } }

/*Se pone en typography porque esta relacionado a la tipografia que se le da al elemento*/
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.7rem;
    animation: moveInRight 1s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: .2rem;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  border-radius: 10rem;
  transition: all .2s;
  position: relative; }

.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }

.btn:active {
  transform: translateY(-0.1rem);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777;
  padding: 1.5rem 4rem;
  display: inline-block; }
  .btn--white::after {
    background-color: #fff; }

.btn--animated {
  animation: moveInBottom .5s ease-out .75s;
  animation-fill-mode: backwards; }

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  transition: all .2s; }

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(0); }

.row {
  max-width: 114rem;
  margin: 0 auto;
  /*
  La pseudo-clase :not() de CSS representa elementos que no coinciden con una lista de selectores.
  Como evita que se seleccionen elementos específicos, se lo conoce como la pseudo-clase de negación.
  Selecciona cualquier elemento que NO sea un párrafo
    :not(p) {
      color: blue;
    }
  */ }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - 3 * 6rem) / 4) + 6rem * 2); }

.header {
  height: 95vh;
  position: relative;
  /* en css no podemos pasar el hexadecimal directo a la funcion rgba, pero sass si, incluso en una variable*/
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* Con el "&" lo que hace es que se sustituye por .header asi podemos poner lo que tenemosmos en .header__logo-box*/ }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }
  .header__logo {
    height: 3.5rem; }

/*.header__logo-box{
  position: absolute;
  top: 4rem;
  left: 4rem;
}*/
.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }
