.card {
  //perspectiva
  /*
    La propiedad CSS de perspectiva le da a un elemento un espacio 3D al afectar la distancia entre el plano Z y el usuario.
    La fuerza del efecto está determinada por el valor. Cuanto menor sea el valor, más se acercará al plano Z y más impresionante
    será el efecto visual. Cuanto mayor sea el valor, más sutil será el efecto.
    Importante: Tenga en cuenta que la propiedad de perspectiva no afecta cómo se representa el elemento; simplemente
    habilita un espacio 3D para elementos secundarios. Esta es la principal diferencia entre la función transform:
    perspective () y la propiedad de perspectiva. El primero da profundidad al elemento, mientras que el segundo crea un
    espacio 3D compartido por todos sus hijos transformados.
  */

  perspective: 150rem;
  //para que tambien funcione en fire fox
  -moz-perspective: 150rem;
  position: relative;
  //si no ponemos este height: 50rem; le pasa lo mismo a los elementos que se les pone float, por contener position absolute
  //a uno o mas de sus hijos, para corregirlo agregamos ese height
  height: 52rem;

  &__side {
    height: 52rem;
    transition: all .8s ease;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    //es para la visibilidad de la cara posterior,  si lo configuramos como hidden, basicamente olculta la parte posterior
    // de un elemento
    backface-visibility: hidden;
    border-radius: 3px;
    //si recortar contenido, dibujar barras de desplazamiento o mostrar el contenido excedente en un elemento a nivel de bloque
    //en este caso la imagen de __picture-1, 2 y 3 hacen que exceda el elemento, para demostrar esto solo se tendria que
    // quitar la propiedad overflow y aumentar el border-radius para comprobar como funciona
    overflow: hidden;
    box-shadow: 0 1.5rem 4rem rgba($color-black, .15);

    &--front {
      background-color: $color-white;

    }

    &--back {
      background-color: green;
      transform: rotateY(180deg);

      &-1 {
        background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark);
      }

      &-2{
        background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark);
      }

      &-3{
        background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark);
      }
    }

  }

  &:hover &__side--front {
    transform: rotateY(-180deg);
  }

  &:hover &__side--back {
    transform: rotateY(0deg);
  }

  &__picture {
    background-size: cover;
    height: 23rem;
    //describe cómo las imágenes de fondo y el color de fondo del elemento deben mezclar entre sí.
    //no funciona en todos los exploradores
    background-blend-mode: screen;
    //clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    //para que clip-path en todos los navegadores se pone el prefijo -webkit- y se debe antes del clip-path:
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);

    //al usar el cip path deja de funcionar el overflow, para respetar los bordes del contenido que desborda al padre
    //para corregirlo le tenemos que agregar a mano el border
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;

    &--1 {
      background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark),
      url(../img/nat-5.jpg);
    }

    &--2 {
      background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark),
      url(../img/nat-6.jpg);    }

    &--3 {
      background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark),
      url(../img/nat-7.jpg);    }
  }

  &__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    text-align: right;
    color: $color-white;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%;
  }

  &__heading-span{
    padding: 1rem 1.5rem;
    //box-decoration-break hace que cuando existan saltos los trat como elementos diferentes con los mismos estilos,
    //para ver como funciona quitemos esta propiedad y veremos que el textp no se alinea correctamente
    //y el prefijo -webkit- es para que funcione en todos los navegadores
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;
    &--1{
      background-image: linear-gradient(to right bottom,
              rgba($color-secondary-light, .85),
              rgba($color-secondary-dark, .85));
    }

    &--2{
      background-image: linear-gradient(to right bottom,
              rgba($color-primary-light, .85),
              rgba($color-primary-dark, .85));
    }

    &--3{
      background-image: linear-gradient(to right bottom,
              rgba($color-tertiary-light, .85),
              rgba($color-tertiary-dark, .85));
    }
  }

  &__details {
    padding: 3rem;
    ul {
      list-style: none;
      width: 80%;
      margin: 0 auto;

      li{
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem;

        &:not(:last-child){
          border-bottom: 1px solid $color-grey-light-2;
        }
      }
    }
  }

  &__cta{
    @include center-horizontal-vertical;
    width: 90%;
  }

  &__price-box{
    color: $color-white;
    margin-bottom: 8rem;
  }

  &__price-only{
    font-size: 1.4rem;
    text-transform: uppercase;
  }

  &__price-value{
    font-size: 6rem;
    font-weight: 100;
  }
}